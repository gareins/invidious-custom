name: Docker Image CI

on:
  workflow_dispatch:

  push:
    branches:
      - master

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build:
    runs-on: ubuntu-latest

    permissions:
      contents: read
      packages: write
      id-token: write

    steps:
    - name: Check Out Repo
      uses: actions/checkout@v4

    - name: Check Out Invidious
      uses: actions/checkout@v4
      with:
        repository: "iv-org/invidious"
        ref: 'master'
        path: 'invidious'

    - name: Patch Invidious main repo
      run: |
        cd invidious
        git config --global user.email "you@example.com"
        git config --global user.name "Your Name"
        git am ../patches/*.patch
        sed -i 's/https:\/\/invidious.io\/donate\//\/donate/g' src/invidious/views/template.ecr

    - name: Set up QEMU
      uses: docker/setup-qemu-action@v2

    - name: Set up Docker Buildx
      id: buildx
      uses: docker/setup-buildx-action@v2

    - name: Login to GHCR
      uses: docker/login-action@v2
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Extract metadata (tags, labels) for Docker
      id: meta
      uses: docker/metadata-action@v4
      with:
        images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

    - name: Build and push alpine docker image
      id: docker_build_new
      uses: docker/build-push-action@v3
      with:
        context: ./
        file: ./Dockerfile.new
        build-args: |
          release=1
        platforms: linux/amd64
        push: true
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}

    - name: Generate artifact attestation
      uses: actions/attest-build-provenance@v2
      with:
        subject-name: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME}}
        subject-digest: ${{ steps.push.outputs.digest }}
        push-to-registry: true
